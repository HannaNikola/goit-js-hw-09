{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAMP,IAAMO,EAAcC,SAASC,cAAc,SACrCC,EAAkBF,SAASC,cAAc,uBACzCE,EAAiBH,SAASC,cAAc,sBACxCG,EAAcJ,SAASC,cAAc,wBACtBD,SAASC,cAAc,UAI5CF,EAAYM,iBAAiB,UAAU,SAACC,GACtCA,EAAMC,iBAON,IANA,IAAMC,EAASC,SAASL,EAAYM,OAC9BC,EAAQF,SAASP,EAAgBQ,OACjCE,EAAOH,SAASN,EAAeO,OAEjCG,EAAeF,EAEVG,EAAI,EAAGA,GAAKN,EAAQM,IAG3BxB,EAAcwB,EAAGD,GAChBE,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjByB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAEvE6B,OAAM,SAAAL,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClByB,EAAA7B,GAAS8B,OAAOI,QAAQ,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAGrEqB,GAAgBD,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay});\n      } else {\n        reject({ position, delay});\n      }\n    }, delay);\n   \n  });\n  \n  \n};\nconst formElement = document.querySelector('.form');\nconst inputFirstDelay = document.querySelector('input[name=\"delay\"]');\nconst inputDelayStep = document.querySelector('input[name=\"step\"]');\nconst inputAmount = document.querySelector('input[name=\"amount\"]');\nconst buttonSubmit = document.querySelector('button');\n\n\n\nformElement.addEventListener('submit', (event) => {\n  event.preventDefault();\n  const amount = parseInt(inputAmount.value);\n  const delay = parseInt(inputFirstDelay.value);\n  const step = parseInt(inputDelayStep.value);\n\n  let currentDelay = delay;\n\n  for (let i = 1; i <= amount; i++){\n\n\n    createPromise(i, currentDelay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    \n    currentDelay += step;\n\n  }\n\n\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$formElement","document","querySelector","$ce04d3a99e08e73b$var$inputFirstDelay","$ce04d3a99e08e73b$var$inputDelayStep","$ce04d3a99e08e73b$var$inputAmount","addEventListener","event","preventDefault","amount","parseInt","value","delay1","step","currentDelay","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","warning"],"version":3,"file":"03-promises.890d16e0.js.map"}